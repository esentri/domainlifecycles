#.AggregateFrame:visual=frame align=left
#.AggregateRoot:fill=#8f8f bold
#.Entity:fill=#88AAFF bold
#.ValueObject:fill=#FFFFCC bold
#.Enum:fill=#FFFFCC bold
#.Identity:fill=#FFFFCC bold
#.DomainCommand:fill=#FFB266 bold
#.DomainEvent:fill=#CCFFFF bold
#.ApplicationService:bold
#.DomainService:fill=#E0E0E0 bold
#.Repository:fill=#C0C0C0 bold
#.OutboundService:fill=#C0C0C0 bold
#.ServiceKind:fill=#C0C0C0 bold
#.QueryClient:fill=#C0C0C0 bold
#.ReadModel:fill=#FFCCE5 bold
#font:Courier
#direction:down
#acycler: greedy
#ranker: longest-path

// !!! tests.shared.complete.onlinehandel.zustellung.StarteAuslieferung !!!
[<DomainCommand> StarteAuslieferung <<DomainCommand>> ]
// !!! tests.shared.complete.onlinehandel.zustellung.ZustellungsService !!!
[<DomainService> ZustellungsService <<DomainService>> |
+ void liefereAus(StarteAuslieferung)
]
// !!! tests.shared.complete.onlinehandel.benachrichtigung.BenachrichtigungService !!!
[<DomainService> BenachrichtigungService <<DomainService>> |
+ void benachrichtige(\# AuslieferungGestartet)
]
// !!! tests.shared.complete.onlinehandel.zustellung.AuslieferungGestartet !!!
[<DomainEvent> AuslieferungGestartet <<DomainEvent>> ]
// !!! tests.shared.complete.onlinehandel.bestellung.NeueBestellung !!!
[<DomainEvent> NeueBestellung <<DomainEvent>> ]
// !!! {Frame} tests.shared.persistence.domain.inheritance.Car !!!
[<AggregateFrame> Car <<Aggregate>>|
// !!! tests.shared.persistence.domain.inheritance.Car !!!
[<AggregateRoot> Car <<AggregateRoot>> |
\# +- id:<ID> VehicleId
o +- brand:<ENUM> Car$Brand
\# +- lengthCm:Integer{<=1000}
|
+ String getType()
]
[<AggregateRoot>Vehicle <<AggregateRoot>>]  <:- [<AggregateRoot>Car <<AggregateRoot>>]
]
// !!! {Frame} tests.shared.persistence.domain.inheritance.Bike !!!
[<AggregateFrame> Bike <<Aggregate>>|
// !!! tests.shared.persistence.domain.inheritance.Bike !!!
[<AggregateRoot> Bike <<AggregateRoot>> |
\# +- id:<ID> VehicleId
o +- gears:int
\# +- lengthCm:Integer{<=1000}
|
+ String getType()
]
[<AggregateRoot>Vehicle <<AggregateRoot>>]  <:- [<AggregateRoot>Bike <<AggregateRoot>>]
]
// !!! {Frame} tests.shared.complete.onlinehandel.bestellung.BestellungBv3 !!!
[<AggregateFrame> BestellungBv3 <<Aggregate>>|
// !!! tests.shared.complete.onlinehandel.bestellung.BestellungBv3 !!!
[<AggregateRoot> BestellungBv3 <<AggregateRoot>> |
\# +- id:<ID> BestellungIdBv3
o +- aktionsCodes:<VO> List<AktionsCodeBv3>
\# +- kundennummer:<IDREF> KundennummerBv3
\# +- prioritaet:Byte{>=1.0}{<=3.0}
|
+ void addBestellKommentar(BestellKommentarBv3)
+ void addBestellPosition(BestellPositionBv3)
+ void removeBestellKommentar(BestellKommentarBv3)
+ void removeBestellPosition(BestellPositionBv3)
+ void starteLieferung()
]
// !!! tests.shared.complete.onlinehandel.bestellung.LieferadresseBv3 !!!
[<Entity> LieferadresseBv3 <<Entity>> |
\# +- id:<ID> LieferadresseIdBv3
\# +- name:String\[0,200\]
\# +- ort:String\[0,200\]
\# +- postleitzahl:String\[0,200\]
\# +- strasse:String\[0,200\]
|
]
// !!! tests.shared.complete.onlinehandel.bestellung.BestellPositionBv3 !!!
[<Entity> BestellPositionBv3 <<Entity>> |
\# +- id:<ID> BestellPositionIdBv3
\# +- artikelId:<IDREF> ArtikelIdBv3
o +- stueckzahl:int{>0}
|
]
// !!! tests.shared.complete.onlinehandel.bestellung.PreisBv3 !!!
[<ValueObject> PreisBv3 <<ValueObject>> |
\# +- betrag:BigDecimal{>0}
\# +- waehrung:<ENUM> WaehrungEnumBv3
|
]
// !!! tests.shared.complete.onlinehandel.bestellung.BestellStatusBv3 !!!
[<Entity> BestellStatusBv3 <<Entity>> |
\# +- id:<ID> BestellStatusIdBv3
\# +- statusAenderungAm:LocalDateTime
\# +- statusCode:<ENUM> BestellStatusCodeEnumBv3
|
]
// !!! tests.shared.complete.onlinehandel.bestellung.BestellKommentarBv3 !!!
[<Entity> BestellKommentarBv3 <<Entity>> |
\# +- id:<ID> BestellKommentarIdBv3
\# +- kommentarAm:LocalDateTime{past}
\# +- kommentarText:String\[0,1000\]{notEmpty}
|
]
[<AggregateRoot>BestellungBv3 <<AggregateRoot>>]  +-[<label> lieferadresse 1] - [<Entity>LieferadresseBv3 <<Entity>>]
[<AggregateRoot>BestellungBv3 <<AggregateRoot>>]  +-[<label> bestellPositionen 2147483647..*] - [<Entity>BestellPositionBv3 <<Entity>>]
[<Entity>BestellPositionBv3 <<Entity>>]  o-[<label> stueckPreis 1] - [<ValueObject>PreisBv3 <<ValueObject>>]
[<AggregateRoot>BestellungBv3 <<AggregateRoot>>]  +-[<label> bestellStatus 1] - [<Entity>BestellStatusBv3 <<Entity>>]
[<AggregateRoot>BestellungBv3 <<AggregateRoot>>]  o-[<label> gesamtPreis 1] - [<ValueObject>PreisBv3 <<ValueObject>>]
[<AggregateRoot>BestellungBv3 <<AggregateRoot>>]  +-[<label> bestellKommentare 0..*] - [<Entity>BestellKommentarBv3 <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.complex.TestRoot !!!
[<AggregateFrame> TestRoot <<Aggregate>>|
// !!! tests.shared.persistence.domain.complex.TestRoot !!!
[<AggregateRoot> TestRoot <<AggregateRoot>> |
\# +- id:<ID> TestRootId
o +- name:String
|
]
// !!! tests.shared.persistence.domain.complex.TestEntity1 !!!
[<Entity> TestEntity1 <<Entity>> |
\# +- id:<ID> TestEntity1Id
o +- name:String
o +- testRootId:<IDREF> TestRootId
|
]
// !!! tests.shared.persistence.domain.complex.TestEntity2 !!!
[<Entity> TestEntity2 <<Entity>> |
\# +- id:<ID> TestEntity2Id
o +- name:String
o +- testRootId:<IDREF> TestRootId
|
]
// !!! tests.shared.persistence.domain.complex.TestEntity3 !!!
[<Entity> TestEntity3 <<Entity>> |
\# +- id:<ID> TestEntity3Id
o +- name:String
o +- testEntity2Id:<IDREF> TestEntity2Id
o +- testRootId:<IDREF> TestRootId
|
]
// !!! tests.shared.persistence.domain.complex.TestEntity4 !!!
[<Entity> TestEntity4 <<Entity>> |
\# +- id:<ID> TestEntity4Id
o +- name:String
o +- testEntity3Id:<IDREF> TestEntity3Id
|
]
// !!! tests.shared.persistence.domain.complex.TestEntity5 !!!
[<Entity> TestEntity5 <<Entity>> |
\# +- id:<ID> TestEntity5Id
o +- name:String
o +- testEntity4Id:<IDREF> TestEntity4Id
o +- testRootId:<IDREF> TestRootId
|
]
// !!! tests.shared.persistence.domain.complex.TestEntity6 !!!
[<Entity> TestEntity6 <<Entity>> |
\# +- id:<ID> TestEntity6Id
o +- name:String
|
]
[<AggregateRoot>TestRoot <<AggregateRoot>>]  +-[<label> testEntity1 0..1] - [<Entity>TestEntity1 <<Entity>>]
[<Entity>TestEntity1 <<Entity>>]  +-[<label> testEntity2A 0..1] - [<Entity>TestEntity2 <<Entity>>]
[<Entity>TestEntity2 <<Entity>>]  +-[<label> testEntity3List 0..*] - [<Entity>TestEntity3 <<Entity>>]
[<Entity>TestEntity3 <<Entity>>]  +-[<label> testEntity4List 0..*] - [<Entity>TestEntity4 <<Entity>>]
[<Entity>TestEntity4 <<Entity>>]  +-[<label> testEntity5List 0..*] - [<Entity>TestEntity5 <<Entity>>]
[<Entity>TestEntity5 <<Entity>>]  +-[<label> testEntity6 0..1] - [<Entity>TestEntity6 <<Entity>>]
[<Entity>TestEntity1 <<Entity>>]  +-[<label> testEntity2B 0..1] - [<Entity>TestEntity2 <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.shared.another.AnotherConfiguration !!!
[<AggregateFrame> AnotherConfiguration <<Aggregate>>|
// !!! tests.shared.persistence.domain.shared.another.AnotherConfiguration !!!
[<AggregateRoot> AnotherConfiguration <<AggregateRoot>> |
\# +- id:<ID> AnotherConfigurationId
|
]
// !!! tests.shared.persistence.domain.shared.another.TangibleConfigurationTableEntry !!!
[<Entity> TangibleConfigurationTableEntry <<Entity>> |
\# +- id:<ID> TangibleConfigurationTableEntryId
o +- anotherConfigurationId:<IDREF> AnotherConfigurationId
o +- x:int
o +- y:int
|
]
[<AggregateRoot>AnotherConfiguration <<AggregateRoot>>]  +-[<label> classA 0..1] - [<Entity>TangibleConfigurationTableEntry <<Entity>>]
[<Entity>Entry <<Entity>>]  <:- [<Entity>TangibleConfigurationTableEntry <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.valueobjectAutoMapping.AutoMappedVoAggregateRoot !!!
[<AggregateFrame> AutoMappedVoAggregateRoot <<Aggregate>>|
// !!! tests.shared.persistence.domain.valueobjectAutoMapping.AutoMappedVoAggregateRoot !!!
[<AggregateRoot> AutoMappedVoAggregateRoot <<AggregateRoot>> |
\# +- id:<ID> AutoMappedVoAggregateRootId
o +- mySimpleVo:<VO> AutoMappedSimpleVo
o +- text:String
o +- valueObjectsOneToMany:<VO> List<AutoMappedSimpleVoOneToMany>
|
+ void setComplexVo(AutoMappedComplexVo)
+ void setSimpleVo(AutoMappedSimpleVo)
]
// !!! tests.shared.persistence.domain.valueobjectAutoMapping.AutoMappedComplexVo !!!
[<ValueObject> AutoMappedComplexVo <<ValueObject>> |
o +- valueA:String
o +- valueB:<VO> AutoMappedSimpleVo
|
]
// !!! tests.shared.persistence.domain.valueobjectAutoMapping.AutoMappedSimpleVoOneToMany2 !!!
[<ValueObject> AutoMappedSimpleVoOneToMany2 <<ValueObject>> |
o +- oneToMany3Set:<VO> Set<AutoMappedSimpleVoOneToMany3>
o +- value:String
|
]
// !!! tests.shared.persistence.domain.valueobjectAutoMapping.AutoMappedVoEntity !!!
[<Entity> AutoMappedVoEntity <<Entity>> |
\# +- id:<ID> AutoMappedVoEntityId
o +- rootId:<IDREF> AutoMappedVoAggregateRootId
o +- text:String
|
+ void setComplexVo(AutoMappedComplexVo)
]
// !!! tests.shared.persistence.domain.valueobjectAutoMapping.AutoMappedVoOneToManyEntity !!!
[<ValueObject> AutoMappedVoOneToManyEntity <<ValueObject>> |
o +- oneToManySet:<VO> Set<AutoMappedVoOneToManyEntity2>
o +- value:String
|
]
// !!! tests.shared.persistence.domain.valueobjectAutoMapping.AutoMappedVoIdentityRef !!!
[<ValueObject> AutoMappedVoIdentityRef <<ValueObject>> |
o +- idRef:<IDREF> AutoMappedVoEntityId
o +- value:String
|
]
[<AggregateRoot>AutoMappedVoAggregateRoot <<AggregateRoot>>]  o-[<label> myComplexVo 0..1] - [<ValueObject>AutoMappedComplexVo <<ValueObject>>]
[<AggregateRoot>AutoMappedVoAggregateRoot <<AggregateRoot>>]  o-[<label> valueObjectsOneToMany2 0..*] - [<ValueObject>AutoMappedSimpleVoOneToMany2 <<ValueObject>>]
[<AggregateRoot>AutoMappedVoAggregateRoot <<AggregateRoot>>]  +-[<label> entities 0..*] - [<Entity>AutoMappedVoEntity <<Entity>>]
[<Entity>AutoMappedVoEntity <<Entity>>]  o-[<label> valueObjectsOneToMany 0..*] - [<ValueObject>AutoMappedVoOneToManyEntity <<ValueObject>>]
[<Entity>AutoMappedVoEntity <<Entity>>]  o-[<label> myComplexVo 0..1] - [<ValueObject>AutoMappedComplexVo <<ValueObject>>]
[<AggregateRoot>AutoMappedVoAggregateRoot <<AggregateRoot>>]  o-[<label> voIdentityRef 0..1] - [<ValueObject>AutoMappedVoIdentityRef <<ValueObject>>]
]
// !!! {Frame} tests.shared.persistence.domain.simple.TestRootSimple !!!
[<AggregateFrame> TestRootSimple <<Aggregate>>|
// !!! tests.shared.persistence.domain.simple.TestRootSimple !!!
[<AggregateRoot> TestRootSimple <<AggregateRoot>> |
\# +- id:<ID> TestRootSimpleId
o +- name:String
|
]
]
// !!! {Frame} tests.shared.persistence.domain.tree.TreeRoot !!!
[<AggregateFrame> TreeRoot <<Aggregate>>|
// !!! tests.shared.persistence.domain.tree.TreeRoot !!!
[<AggregateRoot> TreeRoot <<AggregateRoot>> |
\# +- id:<ID> TreeRootId
o +- name:String
|
]
// !!! tests.shared.persistence.domain.tree.TreeNode !!!
[<Entity> TreeNode <<Entity>> |
\# +- id:<ID> TreeNodeId
o +- nodeName:String
o +- parentNodeId:<IDREF> Optional<TreeNodeId>
o +- rootId:<IDREF> Optional<TreeRootId>
|
]
[<AggregateRoot>TreeRoot <<AggregateRoot>>]  +-[<label> directChildNodes 0..*] - [<Entity>TreeNode <<Entity>>]
[<Entity>TreeNode <<Entity>>]  +-[<label> childNodes 0..*] - [<Entity>TreeNode <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.records.RecordTest !!!
[<AggregateFrame> RecordTest <<Aggregate>>|
// !!! tests.shared.persistence.domain.records.RecordTest !!!
[<AggregateRoot> RecordTest <<AggregateRoot>> |
\# +- id:<ID> RecordTestId
o +- myValue:String
|
]
// !!! tests.shared.persistence.domain.records.RecordVo !!!
[<ValueObject> RecordVo <<ValueObject>> |
\# +- value1:String{notEmpty}
o +- value2:Long
|
]
[<AggregateRoot>RecordTest <<AggregateRoot>>]  o-[<label> myVo 0..1] - [<ValueObject>RecordVo <<ValueObject>>]
[<AggregateRoot>RecordTest <<AggregateRoot>>]  o-[<label> myVoList 0..*] - [<ValueObject>RecordVo <<ValueObject>>]
[<AggregateRoot>RecordTest <<AggregateRoot>>]  o-[<label> myVoSet 0..*] - [<ValueObject>RecordVo <<ValueObject>>]
]
// !!! {Frame} tests.shared.persistence.domain.shared.one.Configuration !!!
[<AggregateFrame> Configuration <<Aggregate>>|
// !!! tests.shared.persistence.domain.shared.one.Configuration !!!
[<AggregateRoot> Configuration <<AggregateRoot>> |
\# +- id:<ID> ConfigurationId
|
]
// !!! tests.shared.persistence.domain.shared.one.GlobalConfigurationTableEntry !!!
[<Entity> GlobalConfigurationTableEntry <<Entity>> |
\# +- id:<ID> GlobalConfigurationTableEntryId
o +- configurationId:<IDREF> ConfigurationId
o +- x:int
o +- y:int
|
]
[<AggregateRoot>Configuration <<AggregateRoot>>]  +-[<label> classA 0..1] - [<Entity>GlobalConfigurationTableEntry <<Entity>>]
[<Entity>Entry <<Entity>>]  <:- [<Entity>GlobalConfigurationTableEntry <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.ignoring.TestRootSimpleIgnoring !!!
[<AggregateFrame> TestRootSimpleIgnoring <<Aggregate>>|
// !!! tests.shared.persistence.domain.ignoring.TestRootSimpleIgnoring !!!
[<AggregateRoot> TestRootSimpleIgnoring <<AggregateRoot>> |
\# +- id:<ID> TestRootSimpleIgnoringId
o +- ignoredField:String
o +- name:String
|
]
]
// !!! {Frame} tests.shared.persistence.domain.inheritanceGenericId.ConcreteRoot !!!
[<AggregateFrame> ConcreteRoot <<Aggregate>>|
// !!! tests.shared.persistence.domain.inheritanceGenericId.ConcreteRoot !!!
[<AggregateRoot> ConcreteRoot <<AggregateRoot>> |
o -- myId:<IDREF> ConcreteRootId
o -- name:String
|
]
[<AggregateRoot>AbstractRoot <<AggregateRoot>>]  <:- [<AggregateRoot>ConcreteRoot <<AggregateRoot>>]
]
// !!! {Frame} tests.shared.persistence.domain.inheritanceExtended.BikeWithComponents !!!
[<AggregateFrame> BikeWithComponents <<Aggregate>>|
// !!! tests.shared.persistence.domain.inheritanceExtended.BikeWithComponents !!!
[<AggregateRoot> BikeWithComponents <<AggregateRoot>> |
\# +- id:<ID> VehicleExtendedId
o +- gears:int
\# +- lengthCm:Integer{<=1000}
o +- type:String
|
]
// !!! tests.shared.persistence.domain.inheritanceExtended.BikeComponent !!!
[<ValueObject> BikeComponent <<ValueObject>> |
o +- manufacturer:String
o +- type:<ENUM> BikeComponent$BikeComponentType
|
]
[<AggregateRoot>VehicleExtended <<AggregateRoot>>]  <:- [<AggregateRoot>BikeWithComponents <<AggregateRoot>>]
[<AggregateRoot>BikeWithComponents <<AggregateRoot>>]  o-[<label> bikeComponents 0..*] - [<ValueObject>BikeComponent <<ValueObject>>]
]
// !!! {Frame} tests.shared.persistence.domain.optional.RefAgg !!!
[<AggregateFrame> RefAgg <<Aggregate>>|
// !!! tests.shared.persistence.domain.optional.RefAgg !!!
[<AggregateRoot> RefAgg <<AggregateRoot>> |
\# +- id:<ID> RefAggId
o +- mandatoryText:String
o +- optionalText:Optional<String>
|
]
]
// !!! {Frame} tests.shared.persistence.domain.temporal.TestRootTemporal !!!
[<AggregateFrame> TestRootTemporal <<Aggregate>>|
// !!! tests.shared.persistence.domain.temporal.TestRootTemporal !!!
[<AggregateRoot> TestRootTemporal <<AggregateRoot>> |
\# +- id:<ID> TestRootTemporalId
o +- localDate:LocalDate
o +- localDateTime:LocalDateTime
o +- localTime:LocalTime
o +- monthDay:MonthDay
o +- myCalendar:Calendar
o +- myDate:Date
o +- myInstant:Instant
o +- myYear:Year
o +- offsetDateTime:OffsetDateTime
o +- offsetTime:OffsetTime
o +- yearMonth:YearMonth
o +- zonedDateTime:ZonedDateTime
|
]
]
// !!! {Frame} tests.shared.persistence.domain.oneToOneLeadingFK.TestRootOneToOneLeading !!!
[<AggregateFrame> TestRootOneToOneLeading <<Aggregate>>|
// !!! tests.shared.persistence.domain.oneToOneLeadingFK.TestRootOneToOneLeading !!!
[<AggregateRoot> TestRootOneToOneLeading <<AggregateRoot>> |
\# +- id:<ID> TestRootOneToOneLeadingId
o +- name:String
|
]
// !!! tests.shared.persistence.domain.oneToOneLeadingFK.TestEntityOneToOneLeading !!!
[<Entity> TestEntityOneToOneLeading <<Entity>> |
\# +- id:<ID> TestEntityOneToOneLeadingId
o +- name:String
|
]
[<AggregateRoot>TestRootOneToOneLeading <<AggregateRoot>>]  +-[<label> testEntityOneToOneLeading 0..1] - [<Entity>TestEntityOneToOneLeading <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.oneToMany.TestRootOneToMany !!!
[<AggregateFrame> TestRootOneToMany <<Aggregate>>|
// !!! tests.shared.persistence.domain.oneToMany.TestRootOneToMany !!!
[<AggregateRoot> TestRootOneToMany <<AggregateRoot>> |
\# +- id:<ID> TestRootOneToManyId
o +- name:String
|
]
// !!! tests.shared.persistence.domain.oneToMany.TestEntityOneToMany !!!
[<Entity> TestEntityOneToMany <<Entity>> |
\# +- id:<ID> TestEntityOneToManyId
o +- name:String
o +- testRootId:<IDREF> TestRootOneToManyId
|
]
[<AggregateRoot>TestRootOneToMany <<AggregateRoot>>]  +-[<label> testEntityOneToManyList 0..*] - [<Entity>TestEntityOneToMany <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.valueobjectsPrimitive.VoAggregatePrimitive !!!
[<AggregateFrame> VoAggregatePrimitive <<Aggregate>>|
// !!! tests.shared.persistence.domain.valueobjectsPrimitive.VoAggregatePrimitive !!!
[<AggregateRoot> VoAggregatePrimitive <<AggregateRoot>> |
\# +- id:<ID> VoAggregatePrimitiveId
o +- optionalSimple:<VO> Optional<SimpleVoPrimitive>
o +- recordMappedSimple:<VO> SimpleVoPrimitive
o +- simple:<VO> SimpleVoPrimitive
|
]
// !!! tests.shared.persistence.domain.valueobjectsPrimitive.ComplexVoPrimitive !!!
[<ValueObject> ComplexVoPrimitive <<ValueObject>> |
o +- num:Long
o +- val:long
|
]
// !!! tests.shared.persistence.domain.valueobjectsPrimitive.NestedVoPrimitive !!!
[<ValueObject> NestedVoPrimitive <<ValueObject>> |
o +- simple:<VO> SimpleVoPrimitive
|
]
[<AggregateRoot>VoAggregatePrimitive <<AggregateRoot>>]  o-[<label> complex 0..1] - [<ValueObject>ComplexVoPrimitive <<ValueObject>>]
[<AggregateRoot>VoAggregatePrimitive <<AggregateRoot>>]  o-[<label> nested 0..1] - [<ValueObject>NestedVoPrimitive <<ValueObject>>]
[<ValueObject>NestedVoPrimitive <<ValueObject>>]  o-[<label> complex 0..1] - [<ValueObject>ComplexVoPrimitive <<ValueObject>>]
[<AggregateRoot>VoAggregatePrimitive <<AggregateRoot>>]  o-[<label> optionalComplex 0..1] - [<ValueObject>ComplexVoPrimitive <<ValueObject>>]
[<AggregateRoot>VoAggregatePrimitive <<AggregateRoot>>]  o-[<label> optionalNested 0..1] - [<ValueObject>NestedVoPrimitive <<ValueObject>>]
[<AggregateRoot>VoAggregatePrimitive <<AggregateRoot>>]  o-[<label> recordMappedComplex 0..1] - [<ValueObject>ComplexVoPrimitive <<ValueObject>>]
[<AggregateRoot>VoAggregatePrimitive <<AggregateRoot>>]  o-[<label> recordMappedNested 0..1] - [<ValueObject>NestedVoPrimitive <<ValueObject>>]
]
// !!! {Frame} tests.shared.persistence.domain.inheritanceExtended.CarWithEngine !!!
[<AggregateFrame> CarWithEngine <<Aggregate>>|
// !!! tests.shared.persistence.domain.inheritanceExtended.CarWithEngine !!!
[<AggregateRoot> CarWithEngine <<AggregateRoot>> |
\# +- id:<ID> VehicleExtendedId
o +- brand:<ENUM> CarWithEngine$Brand
\# +- lengthCm:Integer{<=1000}
o +- type:String
|
]
// !!! tests.shared.persistence.domain.inheritanceExtended.Engine !!!
[<Entity> Engine <<Entity>> |
\# +- id:<ID> EngineId
o +- ps:int
o +- type:<ENUM> Engine$EngineType
|
]
[<AggregateRoot>VehicleExtended <<AggregateRoot>>]  <:- [<AggregateRoot>CarWithEngine <<AggregateRoot>>]
[<AggregateRoot>CarWithEngine <<AggregateRoot>>]  +-[<label> engine 0..1] - [<Entity>Engine <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.bestellung.bv2.Bestellung !!!
[<AggregateFrame> Bestellung <<Aggregate>>|
// !!! tests.shared.persistence.domain.bestellung.bv2.Bestellung !!!
[<AggregateRoot> Bestellung <<AggregateRoot>> |
\# +- id:<ID> BestellungId
o +- aktionsCodes:<VO> List<AktionsCode>
\# +- kundennummer:<IDREF> Kundennummer
\# +- prioritaet:Byte{>=1.0}{<=3.0}
|
+ void addBestellKommentar(BestellKommentar)
+ void addBestellPosition(BestellPosition)
+ void removeBestellKommentar(BestellKommentar)
+ void removeBestellPosition(BestellPosition)
]
// !!! tests.shared.persistence.domain.bestellung.bv2.Lieferadresse !!!
[<Entity> Lieferadresse <<Entity>> |
\# +- id:<ID> LieferadresseId
\# +- name:String\[0,200\]
\# +- ort:String\[0,200\]
\# +- postleitzahl:String\[0,200\]
\# +- strasse:String\[0,200\]
|
]
// !!! tests.shared.persistence.domain.bestellung.bv2.BestellPosition !!!
[<Entity> BestellPosition <<Entity>> |
\# +- id:<ID> BestellPositionId
\# +- artikelId:<IDREF> ArtikelId
o +- stueckzahl:int{>0}
|
]
// !!! tests.shared.persistence.domain.bestellung.bv2.Preis !!!
[<ValueObject> Preis <<ValueObject>> |
\# +- betrag:BigDecimal{>0}
\# +- waehrung:<ENUM> WaehrungEnum
|
]
// !!! tests.shared.persistence.domain.bestellung.bv2.BestellStatus !!!
[<Entity> BestellStatus <<Entity>> |
\# +- id:<ID> BestellStatusId
\# +- statusAenderungAm:LocalDateTime
\# +- statusCode:<ENUM> BestellStatusCodeEnum
|
]
// !!! tests.shared.persistence.domain.bestellung.bv2.BestellKommentar !!!
[<Entity> BestellKommentar <<Entity>> |
\# +- id:<ID> BestellKommentarId
\# +- kommentarAm:LocalDateTime{past}
\# +- kommentarText:String\[0,1000\]{notEmpty}
|
]
[<AggregateRoot>Bestellung <<AggregateRoot>>]  +-[<label> lieferadresse 1] - [<Entity>Lieferadresse <<Entity>>]
[<AggregateRoot>Bestellung <<AggregateRoot>>]  +-[<label> bestellPositionen 2147483647..*] - [<Entity>BestellPosition <<Entity>>]
[<Entity>BestellPosition <<Entity>>]  o-[<label> stueckPreis 1] - [<ValueObject>Preis <<ValueObject>>]
[<AggregateRoot>Bestellung <<AggregateRoot>>]  +-[<label> bestellStatus 1] - [<Entity>BestellStatus <<Entity>>]
[<AggregateRoot>Bestellung <<AggregateRoot>>]  o-[<label> gesamtPreis 1] - [<ValueObject>Preis <<ValueObject>>]
[<AggregateRoot>Bestellung <<AggregateRoot>>]  +-[<label> bestellKommentare 0..*] - [<Entity>BestellKommentar <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.valueobjectTwoLevel.VoAggregateTwoLevel !!!
[<AggregateFrame> VoAggregateTwoLevel <<Aggregate>>|
// !!! tests.shared.persistence.domain.valueobjectTwoLevel.VoAggregateTwoLevel !!!
[<AggregateRoot> VoAggregateTwoLevel <<AggregateRoot>> |
\# +- id:<ID> VoAggregateTwoLevelId
|
]
// !!! tests.shared.persistence.domain.valueobjectTwoLevel.VoLevelOne !!!
[<ValueObject> VoLevelOne <<ValueObject>> |
o +- first:<VO> VoLevelTwoA
o +- second:<VO> VoLevelTwoA
o +- third:<VO> VoLevelTwoB
|
]
[<AggregateRoot>VoAggregateTwoLevel <<AggregateRoot>>]  o-[<label> levelOne 0..1] - [<ValueObject>VoLevelOne <<ValueObject>>]
]
// !!! {Frame} tests.shared.persistence.domain.simpleUuid.TestRootSimpleUuid !!!
[<AggregateFrame> TestRootSimpleUuid <<Aggregate>>|
// !!! tests.shared.persistence.domain.simpleUuid.TestRootSimpleUuid !!!
[<AggregateRoot> TestRootSimpleUuid <<AggregateRoot>> |
\# +- id:<ID> TestRootSimpleUuidId
o +- name:String
|
]
]
// !!! {Frame} tests.shared.persistence.domain.oneToOneFollowingFK.TestRootOneToOneFollowing !!!
[<AggregateFrame> TestRootOneToOneFollowing <<Aggregate>>|
// !!! tests.shared.persistence.domain.oneToOneFollowingFK.TestRootOneToOneFollowing !!!
[<AggregateRoot> TestRootOneToOneFollowing <<AggregateRoot>> |
\# +- id:<ID> TestRootOneToOneFollowingId
o +- name:String
|
]
// !!! tests.shared.persistence.domain.oneToOneFollowingFK.TestEntityOneToOneFollowing !!!
[<Entity> TestEntityOneToOneFollowing <<Entity>> |
\# +- id:<ID> TestEntityOneToOneFollowingId
o +- name:String
o +- testRootId:<IDREF> TestRootOneToOneFollowingId
|
]
[<AggregateRoot>TestRootOneToOneFollowing <<AggregateRoot>>]  +-[<label> testEntityOneToOneFollowing 0..1] - [<Entity>TestEntityOneToOneFollowing <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.valueobjects.VoAggregateRoot !!!
[<AggregateFrame> VoAggregateRoot <<Aggregate>>|
// !!! tests.shared.persistence.domain.valueobjects.VoAggregateRoot !!!
[<AggregateRoot> VoAggregateRoot <<AggregateRoot>> |
\# +- id:<ID> VoAggregateRootId
o +- mySimpleVo:<VO> SimpleVo
o +- text:String
o +- valueObjectsOneToMany:<VO> List<SimpleVoOneToMany>
|
+ void setComplexVo(ComplexVo)
+ void setSimpleVo(SimpleVo)
]
// !!! tests.shared.persistence.domain.valueobjects.ComplexVo !!!
[<ValueObject> ComplexVo <<ValueObject>> |
o +- valueA:String
o +- valueB:<VO> SimpleVo
|
]
// !!! tests.shared.persistence.domain.valueobjects.SimpleVoOneToMany2 !!!
[<ValueObject> SimpleVoOneToMany2 <<ValueObject>> |
o +- oneToMany3Set:<VO> Set<SimpleVoOneToMany3>
o +- value:String
|
]
// !!! tests.shared.persistence.domain.valueobjects.VoEntity !!!
[<Entity> VoEntity <<Entity>> |
\# +- id:<ID> VoEntityId
o +- rootId:<IDREF> VoAggregateRootId
o +- text:String
|
+ void setComplexVo(ComplexVo)
]
// !!! tests.shared.persistence.domain.valueobjects.VoOneToManyEntity !!!
[<ValueObject> VoOneToManyEntity <<ValueObject>> |
o +- oneToManySet:<VO> Set<VoOneToManyEntity2>
o +- value:String
|
]
// !!! tests.shared.persistence.domain.valueobjects.VoIdentityRef !!!
[<ValueObject> VoIdentityRef <<ValueObject>> |
o +- idRef:<IDREF> VoEntityId
o +- value:String
|
]
[<AggregateRoot>VoAggregateRoot <<AggregateRoot>>]  o-[<label> myComplexVo 0..1] - [<ValueObject>ComplexVo <<ValueObject>>]
[<AggregateRoot>VoAggregateRoot <<AggregateRoot>>]  o-[<label> valueObjectsOneToMany2 0..*] - [<ValueObject>SimpleVoOneToMany2 <<ValueObject>>]
[<AggregateRoot>VoAggregateRoot <<AggregateRoot>>]  +-[<label> entities 0..*] - [<Entity>VoEntity <<Entity>>]
[<Entity>VoEntity <<Entity>>]  o-[<label> valueObjectsOneToMany 0..*] - [<ValueObject>VoOneToManyEntity <<ValueObject>>]
[<Entity>VoEntity <<Entity>>]  o-[<label> myComplexVo 0..1] - [<ValueObject>ComplexVo <<ValueObject>>]
[<AggregateRoot>VoAggregateRoot <<AggregateRoot>>]  o-[<label> voIdentityRef 0..1] - [<ValueObject>VoIdentityRef <<ValueObject>>]
]
// !!! {Frame} tests.shared.validation.jakarta.ValidatedAggregateRoot2 !!!
[<AggregateFrame> ValidatedAggregateRoot2 <<Aggregate>>|
// !!! tests.shared.validation.jakarta.ValidatedAggregateRoot2 !!!
[<AggregateRoot> ValidatedAggregateRoot2 <<AggregateRoot>> |
\# +- id:<ID> ValidatedAggregateRoot2Id
o +- optionalText:Optional<String\[0,10\]>
\# +- text:String\[0,100\]{notEmpty}
|
+ void komischeBerechnungMitValidationError()
+ ValidatedAggregateRoot2 optionalTextSetzenMitReturn(Optional<String{notBlank}>)
+ ValidatedAggregateRoot2 textSetzenMitReturn(String)
+ void textSetzenPrecondition(String{notBlank})
+ String{notBlank} textSetzenReturnVal(String)
]
]
// !!! {Frame} tests.shared.persistence.domain.hierarchical.TestRootHierarchical !!!
[<AggregateFrame> TestRootHierarchical <<Aggregate>>|
// !!! tests.shared.persistence.domain.hierarchical.TestRootHierarchical !!!
[<AggregateRoot> TestRootHierarchical <<AggregateRoot>> |
\# +- id:<ID> TestRootHierarchicalId
o +- child:TestRootHierarchical
o +- name:String
o +- parentId:<IDREF> TestRootHierarchicalId
|
]
]
// !!! {Frame} tests.shared.persistence.domain.oneToOneVoDedicatedTable.TestRootOneToOneVoDedicated !!!
[<AggregateFrame> TestRootOneToOneVoDedicated <<Aggregate>>|
// !!! tests.shared.persistence.domain.oneToOneVoDedicatedTable.TestRootOneToOneVoDedicated !!!
[<AggregateRoot> TestRootOneToOneVoDedicated <<AggregateRoot>> |
\# +- id:<ID> TestRootOneToOneVoDedicatedId
o +- name:String
o +- vo:<VO> VoDedicated
|
]
]
// !!! {Frame} tests.shared.persistence.domain.optional.OptionalAggregate !!!
[<AggregateFrame> OptionalAggregate <<Aggregate>>|
// !!! tests.shared.persistence.domain.optional.OptionalAggregate !!!
[<AggregateRoot> OptionalAggregate <<AggregateRoot>> |
\# +- id:<ID> OptionalAggregateId
o +- mandatorySimpleValueObject:<VO> MySimpleValueObject
o +- mandatoryText:String
o +- optionalLong:Optional<Long>
o +- optionalRefId:<IDREF> Optional<RefAggId>
o +- optionalSimpleValueObject:<VO> Optional<MySimpleValueObject>
o +- optionalText:Optional<String>
|
]
// !!! tests.shared.persistence.domain.optional.MyComplexValueObject !!!
[<ValueObject> MyComplexValueObject <<ValueObject>> |
o +- mandatorySimpleValueObject:<VO> MySimpleValueObject
o +- mandatoryText:String
o +- optionalLong:Optional<Long>
o +- optionalSimpleValueObject:<VO> Optional<MySimpleValueObject>
o +- optionalText:Optional<String>
|
]
// !!! tests.shared.persistence.domain.optional.OptionalEntity !!!
[<Entity> OptionalEntity <<Entity>> |
\# +- id:<ID> OptionalEntityId
o +- mandatorySimpleValueObject:<VO> MySimpleValueObject
o +- mandatoryText:String
o +- optionalSimpleValueObject:<VO> Optional<MySimpleValueObject>
o +- optionalText:Optional<String>
|
]
// !!! tests.shared.persistence.domain.optional.RefValueObject !!!
[<ValueObject> RefValueObject <<ValueObject>> |
o +- mandatoryText:String
o +- optionalRef:<IDREF> Optional<RefAggId>
|
]
[<AggregateRoot>OptionalAggregate <<AggregateRoot>>]  o-[<label> mandatoryComplexValueObject 0..1] - [<ValueObject>MyComplexValueObject <<ValueObject>>]
[<AggregateRoot>OptionalAggregate <<AggregateRoot>>]  o-[<label> optionalComplexValueObject 0..1] - [<ValueObject>MyComplexValueObject <<ValueObject>>]
[<AggregateRoot>OptionalAggregate <<AggregateRoot>>]  +-[<label> optionalEntity 0..1] - [<Entity>OptionalEntity <<Entity>>]
[<Entity>OptionalEntity <<Entity>>]  o-[<label> mandatoryComplexValueObject 0..1] - [<ValueObject>MyComplexValueObject <<ValueObject>>]
[<Entity>OptionalEntity <<Entity>>]  o-[<label> optionalComplexValueObject 0..1] - [<ValueObject>MyComplexValueObject <<ValueObject>>]
[<Entity>OptionalEntity <<Entity>>]  o-[<label> complexValueObjectList 0..*] - [<ValueObject>MyComplexValueObject <<ValueObject>>]
[<AggregateRoot>OptionalAggregate <<AggregateRoot>>]  o-[<label> refValueObject 0..1] - [<ValueObject>RefValueObject <<ValueObject>>]
[<AggregateRoot>OptionalAggregate <<AggregateRoot>>]  o-[<label> refValueObjectList 0..*] - [<ValueObject>RefValueObject <<ValueObject>>]
]
// !!! {Frame} tests.shared.persistence.domain.oneToOneFollowingLeadingFK.TestRootOneToOneFollowingLeading !!!
[<AggregateFrame> TestRootOneToOneFollowingLeading <<Aggregate>>|
// !!! tests.shared.persistence.domain.oneToOneFollowingLeadingFK.TestRootOneToOneFollowingLeading !!!
[<AggregateRoot> TestRootOneToOneFollowingLeading <<AggregateRoot>> |
\# +- id:<ID> TestRootOneToOneFollowingLeadingId
o +- name:String
|
]
// !!! tests.shared.persistence.domain.oneToOneFollowingLeadingFK.TestEntityAOneToOneFollowingLeading !!!
[<Entity> TestEntityAOneToOneFollowingLeading <<Entity>> |
\# +- id:<ID> TestEntityAOneToOneFollowingLeadingId
o +- name:String
o +- testRootId:<IDREF> TestRootOneToOneFollowingLeadingId
|
]
// !!! tests.shared.persistence.domain.oneToOneFollowingLeadingFK.TestEntityBOneToOneFollowingLeading !!!
[<Entity> TestEntityBOneToOneFollowingLeading <<Entity>> |
\# +- id:<ID> TestEntityBOneToOneFollowingLeadingId
o +- name:String
o +- testRootId:<IDREF> TestRootOneToOneFollowingLeadingId
|
]
[<AggregateRoot>TestRootOneToOneFollowingLeading <<AggregateRoot>>]  +-[<label> testEntityAOneToOneFollowingLeading 0..1] - [<Entity>TestEntityAOneToOneFollowingLeading <<Entity>>]
[<AggregateRoot>TestRootOneToOneFollowingLeading <<AggregateRoot>>]  +-[<label> testEntityBOneToOneFollowingLeading 0..1] - [<Entity>TestEntityBOneToOneFollowingLeading <<Entity>>]
]
// !!! {Frame} tests.shared.persistence.domain.hierarchicalBackRef.TestRootHierarchicalBackref !!!
[<AggregateFrame> TestRootHierarchicalBackref <<Aggregate>>|
// !!! tests.shared.persistence.domain.hierarchicalBackRef.TestRootHierarchicalBackref !!!
[<AggregateRoot> TestRootHierarchicalBackref <<AggregateRoot>> |
\# +- id:<ID> TestRootHierarchicalBackrefId
o +- child:TestRootHierarchicalBackref
o +- name:String
o +- parent:TestRootHierarchicalBackref
|
]
]
// !!! {Frame} tests.shared.persistence.domain.valueobjectsNested.VoAggregateNested !!!
[<AggregateFrame> VoAggregateNested <<Aggregate>>|
// !!! tests.shared.persistence.domain.valueobjectsNested.VoAggregateNested !!!
[<AggregateRoot> VoAggregateNested <<AggregateRoot>> |
\# +- id:<ID> VoAggregateNestedId
o +- nestedEnumSingleValued:<VO> NestedEnumSingleValued
o +- nestedEnumSingleValuedList:<VO> List<NestedEnumSingleValued>
o +- nestedId:<VO> NestedId
o +- nestedIdList:<VO> List<NestedId>
o +- nestedSimpleVo:<VO> NestedSimpleVo
o +- nestedSimpleVoList:<VO> List<NestedSimpleVo>
|
]
]
// !!! {Frame} tests.shared.persistence.domain.multilevelvo.VoAggregateThreeLevel !!!
[<AggregateFrame> VoAggregateThreeLevel <<Aggregate>>|
// !!! tests.shared.persistence.domain.multilevelvo.VoAggregateThreeLevel !!!
[<AggregateRoot> VoAggregateThreeLevel <<AggregateRoot>> |
\# +- identifikationsNummer:<ID> VoAggregateThreeLevelId
o +- info:String
|
+ void setComplexVo(ComplexVo)
]
// !!! tests.shared.persistence.domain.multilevelvo.ThreeLevelVo !!!
[<ValueObject> ThreeLevelVo <<ValueObject>> |
o +- ownValue:long
|
]
// !!! tests.shared.persistence.domain.multilevelvo.ThreeLevelVoLevelTwo !!!
[<ValueObject> ThreeLevelVoLevelTwo <<ValueObject>> |
|
]
// !!! tests.shared.persistence.domain.multilevelvo.ThreeLevelVoLevelThree !!!
[<ValueObject> ThreeLevelVoLevelThree <<ValueObject>> |
o +- another:String
o +- text:String
|
]
// !!! tests.shared.persistence.domain.valueobjects.ComplexVo !!!
[<ValueObject> ComplexVo <<ValueObject>> |
o +- valueA:String
o +- valueB:<VO> SimpleVo
|
]
[<AggregateRoot>VoAggregateThreeLevel <<AggregateRoot>>]  o-[<label> threeLevelVo 0..1] - [<ValueObject>ThreeLevelVo <<ValueObject>>]
[<ValueObject>ThreeLevelVo <<ValueObject>>]  o-[<label> levelTwoA 0..1] - [<ValueObject>ThreeLevelVoLevelTwo <<ValueObject>>]
[<ValueObject>ThreeLevelVoLevelTwo <<ValueObject>>]  o-[<label> levelThreeA 0..1] - [<ValueObject>ThreeLevelVoLevelThree <<ValueObject>>]
[<ValueObject>ThreeLevelVoLevelTwo <<ValueObject>>]  o-[<label> levelThreeB 0..1] - [<ValueObject>ThreeLevelVoLevelThree <<ValueObject>>]
[<ValueObject>ThreeLevelVo <<ValueObject>>]  o-[<label> levelTwoB 0..1] - [<ValueObject>ThreeLevelVoLevelTwo <<ValueObject>>]
[<AggregateRoot>VoAggregateThreeLevel <<AggregateRoot>>]  o-[<label> myComplexVo 0..1] - [<ValueObject>ComplexVo <<ValueObject>>]
]
// !!! {Frame} tests.shared.persistence.domain.manyToManyWithJoinEntity.TestRootManyToMany !!!
[<AggregateFrame> TestRootManyToMany <<Aggregate>>|
// !!! tests.shared.persistence.domain.manyToManyWithJoinEntity.TestRootManyToMany !!!
[<AggregateRoot> TestRootManyToMany <<AggregateRoot>> |
\# +- id:<ID> TestRootManyToManyId
o +- name:String
|
]
// !!! tests.shared.persistence.domain.manyToManyWithJoinEntity.TestEntityManyToManyA !!!
[<Entity> TestEntityManyToManyA <<Entity>> |
\# +- id:<ID> TestEntityManyToManyAId
o +- name:String
o +- testRootManyToMany:TestRootManyToMany
|
]
// !!! tests.shared.persistence.domain.manyToManyWithJoinEntity.TestEntityManyToManyJoin !!!
[<Entity> TestEntityManyToManyJoin <<Entity>> |
\# +- id:<ID> TestEntityManyToManyJoinId
o +- testEntityManyToManyAId:<IDREF> TestEntityManyToManyAId
|
]
// !!! tests.shared.persistence.domain.manyToManyWithJoinEntity.TestEntityManyToManyB !!!
[<Entity> TestEntityManyToManyB <<Entity>> |
\# +- id:<ID> TestEntityManyToManyBId
o +- name:String
|
]
[<AggregateRoot>TestRootManyToMany <<AggregateRoot>>]  +-[<label> testEntityManyToManyAList 0..*] - [<Entity>TestEntityManyToManyA <<Entity>>]
[<Entity>TestEntityManyToManyA <<Entity>>]  +-[<label> testEntityManyToManyJoinList 0..*] - [<Entity>TestEntityManyToManyJoin <<Entity>>]
[<Entity>TestEntityManyToManyJoin <<Entity>>]  +-[<label> testEntityManyToManyB 0..1] - [<Entity>TestEntityManyToManyB <<Entity>>]
]
// !!! {Frame} tests.shared.validation.javax.ValidatedAggregateRoot !!!
[<AggregateFrame> ValidatedAggregateRoot <<Aggregate>>|
// !!! tests.shared.validation.javax.ValidatedAggregateRoot !!!
[<AggregateRoot> ValidatedAggregateRoot <<AggregateRoot>> |
\# +- id:<ID> ValidatedAggregateRootId
o +- optionalText:Optional<String\[0,10\]>
\# +- text:String\[0,100\]{notEmpty}
|
+ void komischeBerechnungMitValidationError()
+ ValidatedAggregateRoot optionalTextSetzenMitReturn(Optional<String{notBlank}>)
+ ValidatedAggregateRoot textSetzenMitReturn(String)
+ void textSetzenPrecondition(String{notBlank})
+ String{notBlank} textSetzenReturnVal(String)
]
]
[<AggregateFrame> TestRoot <<Aggregate>>]  <-[<label> TestEntity1.testRootId] - [<AggregateFrame> TestRoot <<Aggregate>>]
[<AggregateFrame> TestRoot <<Aggregate>>]  -[<label> TestEntity2.testRootId] -> [<AggregateFrame> TestRoot <<Aggregate>>]
[<AggregateFrame> TestRoot <<Aggregate>>]  <-[<label> TestEntity3.testRootId] - [<AggregateFrame> TestRoot <<Aggregate>>]
[<AggregateFrame> TestRoot <<Aggregate>>]  -[<label> TestEntity5.testRootId] -> [<AggregateFrame> TestRoot <<Aggregate>>]
[<AggregateFrame> AnotherConfiguration <<Aggregate>>]  <-[<label> TangibleConfigurationTableEntry.anotherConfigurationId] - [<AggregateFrame> AnotherConfiguration <<Aggregate>>]
[<AggregateFrame> AutoMappedVoAggregateRoot <<Aggregate>>]  <-[<label> AutoMappedVoEntity.rootId] - [<AggregateFrame> AutoMappedVoAggregateRoot <<Aggregate>>]
[<AggregateFrame> TreeRoot <<Aggregate>>]  <-[<label> TreeNode.rootId] - [<AggregateFrame> TreeRoot <<Aggregate>>]
[<AggregateFrame> Configuration <<Aggregate>>]  <-[<label> GlobalConfigurationTableEntry.configurationId] - [<AggregateFrame> Configuration <<Aggregate>>]
[<AggregateFrame> TestRootOneToMany <<Aggregate>>]  <-[<label> TestEntityOneToMany.testRootId] - [<AggregateFrame> TestRootOneToMany <<Aggregate>>]
[<AggregateFrame> TestRootOneToOneFollowing <<Aggregate>>]  <-[<label> TestEntityOneToOneFollowing.testRootId] - [<AggregateFrame> TestRootOneToOneFollowing <<Aggregate>>]
[<AggregateFrame> VoAggregateRoot <<Aggregate>>]  <-[<label> VoEntity.rootId] - [<AggregateFrame> VoAggregateRoot <<Aggregate>>]
[<AggregateFrame> TestRootHierarchical <<Aggregate>>]  <-[<label> TestRootHierarchical.parentId] - [<AggregateFrame> TestRootHierarchical <<Aggregate>>]
[<AggregateFrame> OptionalAggregate <<Aggregate>>]  -[<label> OptionalAggregate.optionalRefId] -> [<AggregateFrame> RefAgg <<Aggregate>>]
[<AggregateFrame> OptionalAggregate <<Aggregate>>]  -[<label> RefValueObject.optionalRef] -> [<AggregateFrame> RefAgg <<Aggregate>>]
[<AggregateFrame> TestRootOneToOneFollowingLeading <<Aggregate>>]  <-[<label> TestEntityAOneToOneFollowingLeading.testRootId] - [<AggregateFrame> TestRootOneToOneFollowingLeading <<Aggregate>>]
[<AggregateFrame> TestRootOneToOneFollowingLeading <<Aggregate>>]  -[<label> TestEntityBOneToOneFollowingLeading.testRootId] -> [<AggregateFrame> TestRootOneToOneFollowingLeading <<Aggregate>>]
[<AggregateFrame> VoAggregateNested <<Aggregate>>]  <-[<label> NestedId.idRef] - [<AggregateFrame> VoAggregateNested <<Aggregate>>]
// !!! tests.shared.complete.onlinehandel.bestellung.BestellungRepository !!!
[<Repository> BestellungRepository <<Repository>> |
+ BestellungIdBv3 create(\# BestellungBv3)
+ Optional<BestellungBv3> deleteById(BestellungIdBv3)
+ Optional<BestellungBv3> findById(\# BestellungIdBv3)
+ Stream<BestellungBv3> findByStatus(\# BestellStatusCodeEnum)
+ BestellungBv3 insert(BestellungBv3)
+ BestellungBv3 update(BestellungBv3)
]
[<DomainCommand>StarteAuslieferung <<DomainCommand>>]  --> [<DomainService>ZustellungsService <<DomainService>>]
[<DomainEvent>AuslieferungGestartet <<DomainEvent>>]  --> [<DomainService>BenachrichtigungService <<DomainService>>]
[<AggregateFrame> BestellungBv3 <<Aggregate>>]  --> [<DomainEvent>AuslieferungGestartet <<DomainEvent>>]
[<Repository>BestellungRepository <<Repository>>]  --> [<DomainEvent>NeueBestellung <<DomainEvent>>]
[<DomainService>ZustellungsService <<DomainService>>]  -- [<Repository>BestellungRepository <<Repository>>]
[<Repository>BestellungRepository <<Repository>>]  -- [<AggregateFrame> BestellungBv3 <<Aggregate>>]
