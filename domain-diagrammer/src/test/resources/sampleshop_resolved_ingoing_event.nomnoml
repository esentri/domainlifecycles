#.AF:visual=frame align=left
#.AF_R:visual=frame align=left;stroke=#FF0000
#.AF_N:visual=frame align=left;stroke=#108738
#.AR:fill=#8f8f bold
#.AR_R:fill=#8f8f bold;stroke=#FF0000
#.AR_N:fill=#8f8f bold;stroke=#108738
#.E:fill=#88AAFF bold
#.E_R:fill=#88AAFF bold;stroke=#FF0000
#.E_N:fill=#88AAFF bold;stroke=#108738
#.VO:fill=#FFFFCC bold
#.VO_R:fill=#FFFFCC bold;stroke=#FF0000
#.VO_N:fill=#FFFFCC bold;stroke=#108738
#.V:fill=#FFFFCC bold
#.V_R:fill=#FFFFCC bold;stroke=#FF0000
#.V_N:fill=#FFFFCC bold;stroke=#108738
#.I:fill=#FFFFCC bold
#.I_R:fill=#FFFFCC bold;stroke=#FF0000
#.I_N:fill=#FFFFCC bold;stroke=#108738
#.DC:fill=#FFB266 bold
#.DC_R:fill=#FFB266 bold;stroke=#FF0000
#.DC_N:fill=#FFB266 bold;stroke=#108738
#.DE:fill=#CCFFFF bold
#.DE_R:fill=#CCFFFF bold;stroke=#FF0000
#.DE_N:fill=#CCFFFF bold;stroke=#108738
#.AS:bold
#.AS_R:bold;stroke=#FF0000
#.AS_N:bold;stroke=#108738
#.DS:fill=#E0E0E0 bold
#.R:fill=#C0C0C0 bold
#.R_R:fill=#C0C0C0 bold;stroke=#FF0000
#.R_N:fill=#C0C0C0 bold;stroke=#108738
#.OS:fill=#C0C0C0 bold
#.OS_R:fill=#C0C0C0 bold;stroke=#FF0000
#.OS_N:fill=#C0C0C0 bold;stroke=#108738
#.SK:fill=#C0C0C0 bold
#.SK_R:fill=#C0C0C0 bold;stroke=#FF0000
#.SK_N:fill=#C0C0C0 bold;stroke=#108738
#.QH:fill=#C0C0C0 bold
#.QH_R:fill=#C0C0C0 bold;stroke=#FF0000
#.QH_N:fill=#C0C0C0 bold;stroke=#108738
#.RM:fill=#FFCCE5 bold
#.RM_R:fill=#FFCCE5 bold;stroke=#FF0000
#.RM_N:fill=#FFCCE5 bold;stroke=#108738
#font:Helvetica
#direction:down
#acycler: greedy
#ranker: longest-path
#background: transparent
#.note: fill=#ffffff italic

// !!! sampleshop.core.domain.order.CancelOrder !!!
[<DC> CancelOrder <<DomainCommand>> ]
// !!! sampleshop.core.domain.order.PlaceOrder !!!
[<DC> PlaceOrder <<DomainCommand>> ]
// !!! sampleshop.core.domain.order.ShipOrder !!!
[<DC> ShipOrder <<DomainCommand>> ]
// !!! sampleshop.inbound.driver.OrderService !!!
[<AS> OrderDriver <<Driver>> |
+ Optional<Order> cancel(CancelOrder)
+ List<Order> find(int,int,OrderStatus\[\])
+ Order place(PlaceOrder)
+ Optional<Order> ship(ShipOrder)
]
// !!! sampleshop.core.domain.order.OrderPlacementService !!!
[<DS> OrderPlacementService <<DomainService>> |
+ Order placeOrder(PlaceOrder)
]
// !!! sampleshop.core.domain.order.OrderCanceled !!!
[<DE> OrderCanceled <<DomainEvent>> ]
// !!! {Frame} sampleshop.core.domain.order.Order !!!
[<AF> Order <<Aggregate>>|
// !!! sampleshop.core.domain.order.Order !!!
[<AR> Order <<AggregateRoot>> |
\# +- id:<ID> Order$OrderId
o +- creation:Instant
\# +- customerId:<IDREF> Customer$CustomerId
\# +- status:<ENUM> OrderStatus
|
+ Order add(Product$ProductId)
+ Order addItem(\# Product$ProductId,int{>0})
+ Order cancel()
+ boolean hasStatus(OrderStatus)
+ Order ship()
+ Price totalPrice()
]
// !!! sampleshop.core.domain.order.OrderItem !!!
[<E> OrderItem <<Entity>> |
\# +- id:<ID> OrderItem$OrderItemId
\# +- productId:<IDREF> Product$ProductId
\# +- productPrice:<VO> Price
o +- quantity:int{>0}
|
+ OrderItem addQuantity(int)
+ Price itemPrice()
]
[<AR>Order <<AggregateRoot>>]  +-[<label> items 0..*] - [<E>OrderItem <<Entity>>]
]
// !!! sampleshop.outbound.JooqOrderRepository !!!
[<R> OrderRepository <<Repository>> |
+ Optional<Order> deleteById(Order$OrderId)
+ Stream<Order> find(int,int,OrderStatus\[\])
+ Optional<Order> findById(Order$OrderId)
+ Order insert(Order)
+ Order$OrderId newOrderId()
+ OrderItem$OrderItemId newOrderItemId()
+ Order update(Order)
]
[<DC>CancelOrder <<DomainCommand>>]  --> [<AS>OrderDriver <<Driver>>]
[<DC>PlaceOrder <<DomainCommand>>]  --> [<AS>OrderDriver <<Driver>>]
[<DC>ShipOrder <<DomainCommand>>]  --> [<AS>OrderDriver <<Driver>>]
[<AF> Order <<Aggregate>>]  --> [<DE>OrderCanceled <<DomainEvent>>]
[<DS>OrderPlacementService <<DomainService>>]  -- [<R>OrderRepository <<Repository>>]
[<AS>OrderDriver <<Driver>>]  -- [<DS>OrderPlacementService <<DomainService>>]
[<AS>OrderDriver <<Driver>>]  -- [<R>OrderRepository <<Repository>>]
[<R>OrderRepository <<Repository>>]  -- [<AF> Order <<Aggregate>>]
